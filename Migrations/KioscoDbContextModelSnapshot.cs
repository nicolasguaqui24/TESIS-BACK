// <auto-generated />
using System;
using KioscoAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KioscoAPI.Migrations
{
    [DbContext(typeof(KioscoDbContext))]
    partial class KioscoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("KioscoAPI.Models.CajaMovimiento", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("id_usuario")
                        .HasColumnType("int");

                    b.Property<decimal>("monto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("id_usuario");

                    b.ToTable("CajaMovimientos");
                });

            modelBuilder.Entity("KioscoAPI.Models.Categoria", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("estado")
                        .HasColumnType("bit");

                    b.Property<string>("imagen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("KioscoAPI.Models.Cliente", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("activo")
                        .HasColumnType("bit");

                    b.Property<decimal>("deuda")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fecha_alta")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fecha_baja")
                        .HasColumnType("datetime2");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tipo_cliente")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("KioscoAPI.Models.DetalleVenta", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<int>("id_producto")
                        .HasColumnType("int");

                    b.Property<int>("id_venta")
                        .HasColumnType("int");

                    b.Property<decimal>("precio_unitario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("subtotal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id");

                    b.HasIndex("id_producto");

                    b.HasIndex("id_venta");

                    b.ToTable("DetallesVenta");
                });

            modelBuilder.Entity("KioscoAPI.Models.MovimientoInterno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("Motivo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioResponsable")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MovimientosInternos");
                });

            modelBuilder.Entity("KioscoAPI.Models.MovimientoStock", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("id_producto")
                        .HasColumnType("int");

                    b.Property<int>("id_usuario")
                        .HasColumnType("int");

                    b.Property<string>("observacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("id_producto");

                    b.HasIndex("id_usuario");

                    b.ToTable("MovimientosStock");
                });

            modelBuilder.Entity("KioscoAPI.Models.PagoFiado", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("fecha_pago")
                        .HasColumnType("datetime2");

                    b.Property<int>("id_cliente")
                        .HasColumnType("int");

                    b.Property<int>("id_venta")
                        .HasColumnType("int");

                    b.Property<decimal>("monto")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id");

                    b.HasIndex("id_cliente");

                    b.HasIndex("id_venta");

                    b.ToTable("PagosFiado");
                });

            modelBuilder.Entity("KioscoAPI.Models.Permiso", b =>
                {
                    b.Property<int>("id_usuario")
                        .HasColumnType("int");

                    b.Property<string>("acceso")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("acceso");

                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.HasKey("id_usuario", "acceso");

                    b.ToTable("Permisos");
                });

            modelBuilder.Entity("KioscoAPI.Models.PrecioProducto", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("fecha_desde")
                        .HasColumnType("datetime2");

                    b.Property<int>("id_categoria")
                        .HasColumnType("int");

                    b.Property<int>("id_producto")
                        .HasColumnType("int");

                    b.Property<int>("id_proveedor")
                        .HasColumnType("int");

                    b.Property<decimal>("precio")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id");

                    b.HasIndex("id_categoria");

                    b.HasIndex("id_producto");

                    b.HasIndex("id_proveedor");

                    b.ToTable("PreciosProducto");
                });

            modelBuilder.Entity("KioscoAPI.Models.Producto", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("codigo_barra")
                        .HasColumnType("int");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("estado")
                        .HasColumnType("bit");

                    b.Property<int>("id_categoria")
                        .HasColumnType("int");

                    b.Property<int>("id_proveedor")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("stock")
                        .HasColumnType("int");

                    b.Property<int>("stock_minimo")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("id_categoria");

                    b.HasIndex("id_proveedor");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("KioscoAPI.Models.Proveedore", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("CBU")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("activo")
                        .HasColumnType("bit");

                    b.Property<int>("deuda")
                        .HasColumnType("int");

                    b.Property<string>("direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Proveedores");
                });

            modelBuilder.Entity("KioscoAPI.Models.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Impuestos")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Items")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetodoPago")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreComercio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroTransaccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("id_venta")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("id_venta")
                        .IsUnique();

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("KioscoAPI.Models.Usuario", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("activo")
                        .HasColumnType("bit");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password_hash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("rol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("usuario");

                    b.HasKey("id");

                    b.HasIndex("usuario")
                        .IsUnique();

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("KioscoAPI.Models.Venta", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fecha_pago_pactado")
                        .HasColumnType("datetime2");

                    b.Property<int?>("id_cliente")
                        .HasColumnType("int");

                    b.Property<int>("id_usuario")
                        .HasColumnType("int");

                    b.Property<string>("observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("saldo_pendiente")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("tipo_venta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id");

                    b.HasIndex("id_cliente");

                    b.HasIndex("id_usuario");

                    b.ToTable("Ventas");
                });

            modelBuilder.Entity("KioscoAPI.Models.CajaMovimiento", b =>
                {
                    b.HasOne("KioscoAPI.Models.Usuario", "Usuario")
                        .WithMany("CajaMovimiento")
                        .HasForeignKey("id_usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("KioscoAPI.Models.DetalleVenta", b =>
                {
                    b.HasOne("KioscoAPI.Models.Producto", "Producto")
                        .WithMany("DetalleVenta")
                        .HasForeignKey("id_producto")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("KioscoAPI.Models.Venta", "Venta")
                        .WithMany("DetalleVenta")
                        .HasForeignKey("id_venta")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("KioscoAPI.Models.MovimientoStock", b =>
                {
                    b.HasOne("KioscoAPI.Models.Producto", "Producto")
                        .WithMany("MovimientoStock")
                        .HasForeignKey("id_producto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KioscoAPI.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("id_usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("KioscoAPI.Models.PagoFiado", b =>
                {
                    b.HasOne("KioscoAPI.Models.Cliente", "Cliente")
                        .WithMany("PagosFiado")
                        .HasForeignKey("id_cliente")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("KioscoAPI.Models.Venta", "Venta")
                        .WithMany("PagosFiado")
                        .HasForeignKey("id_venta")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("KioscoAPI.Models.Permiso", b =>
                {
                    b.HasOne("KioscoAPI.Models.Usuario", "Usuario")
                        .WithMany("Permisos")
                        .HasForeignKey("id_usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("KioscoAPI.Models.PrecioProducto", b =>
                {
                    b.HasOne("KioscoAPI.Models.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("id_categoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KioscoAPI.Models.Producto", "Producto")
                        .WithMany("PreciosProducto")
                        .HasForeignKey("id_producto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KioscoAPI.Models.Proveedore", "Proveedore")
                        .WithMany("PreciosProducto")
                        .HasForeignKey("id_proveedor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Producto");

                    b.Navigation("Proveedore");
                });

            modelBuilder.Entity("KioscoAPI.Models.Producto", b =>
                {
                    b.HasOne("KioscoAPI.Models.Categoria", "Categoria")
                        .WithMany("Producto")
                        .HasForeignKey("id_categoria")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("KioscoAPI.Models.Proveedore", "Proveedore")
                        .WithMany("Producto")
                        .HasForeignKey("id_proveedor")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Proveedore");
                });

            modelBuilder.Entity("KioscoAPI.Models.Ticket", b =>
                {
                    b.HasOne("KioscoAPI.Models.Venta", "Venta")
                        .WithOne("Ticket")
                        .HasForeignKey("KioscoAPI.Models.Ticket", "id_venta")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("KioscoAPI.Models.Venta", b =>
                {
                    b.HasOne("KioscoAPI.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("id_cliente");

                    b.HasOne("KioscoAPI.Models.Usuario", "Usuario")
                        .WithMany("Ventas")
                        .HasForeignKey("id_usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("KioscoAPI.Models.Categoria", b =>
                {
                    b.Navigation("Producto");
                });

            modelBuilder.Entity("KioscoAPI.Models.Cliente", b =>
                {
                    b.Navigation("PagosFiado");
                });

            modelBuilder.Entity("KioscoAPI.Models.Producto", b =>
                {
                    b.Navigation("DetalleVenta");

                    b.Navigation("MovimientoStock");

                    b.Navigation("PreciosProducto");
                });

            modelBuilder.Entity("KioscoAPI.Models.Proveedore", b =>
                {
                    b.Navigation("PreciosProducto");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("KioscoAPI.Models.Usuario", b =>
                {
                    b.Navigation("CajaMovimiento");

                    b.Navigation("Permisos");

                    b.Navigation("Ventas");
                });

            modelBuilder.Entity("KioscoAPI.Models.Venta", b =>
                {
                    b.Navigation("DetalleVenta");

                    b.Navigation("PagosFiado");

                    b.Navigation("Ticket")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
